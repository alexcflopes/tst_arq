docker run \
    -e ARCHITECTURES_REPOSITORY_URI=https://github.com/mbouchenoire/lowfer.git \
    -e ARCHITECTURES_REPOSITORY_BRANCH=master \
    -e ARCHITECTURES_REPOSITORY_PATH=src/test/resources/architectures/demo \
    -p 8080:8080 \
    mbouchenoire/lowfer:latest

docker run \
    -e ARCHITECTURES_REPOSITORY_URI=https://github.com/alexcflopes/tst_arq.git \
    -e ARCHITECTURES_REPOSITORY_BRANCH=main \
    -e ARCHITECTURES_REPOSITORY_PATH=arqs/demo \
    -p 8080:8080 \
    mbouchenoire/lowfer:latest
    
docker run \
    -e GIT_HOST_DEFAULT_PRIVATE_KEY_PATH=/Users/alexcflopes/.ssh/id_ed25519.pub \
    -e ARCHITECTURES_REPOSITORY_URI=https://github.com/alexcflopes/tst_arq.git \
    -e ARCHITECTURES_REPOSITORY_BRANCH=main \
    -e ARCHITECTURES_REPOSITORY_PATH=arqs/demo \
    -p 8080:8080 \
    mbouchenoire/lowfer:latest

/Users/alexcflopes/.ssh
/Users/alexcflopes/.ssh/id_ed25519
/Users/alexcflopes/.ssh/id_ed25519.pub

 @Value("${git.host.default.ssl-verify:true}") boolean sslVerify,
        @Value("${git.host.default.private-key.base64:}") String privateKeyBase64,
        @Value("${git.host.default.private-key.path:}") String configuredPrivateKeyPath,
        @Value("${git.host.default.private-key.password:}") String privateKeyPassword) throws IOException {

        final GitSshConfig sshConfig = getPrivateKeyPath(configuredPrivateKeyPath, privateKeyBase64)
            .map(privateKeyPath -> new GitSshConfig(privateKeyPath, privateKeyPassword))
            .orElse(null);

        this.defaultConfig = new GitHostConfig(sslVerify, sshConfig);
    }
